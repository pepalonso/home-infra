# nginx.conf
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Redirect all HTTP to HTTPS
    server {
        listen 80;
        server_name ha.palonso-pi.duckdns.org n8n.palonso-pi.duckdns.org claus.palonso-pi.duckdns.org;
        return 301 https://$host$request_uri;
    }

    # Home Assistant Server
    server {
        listen 443 ssl;
        server_name ha.palonso-pi.duckdns.org;

        ssl_certificate /etc/letsencrypt/live/palonso-pi.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/palonso-pi.duckdns.org/privkey.pem;

        # Allow large uploads
        client_max_body_size 0;

        # Add security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        location / {
            proxy_pass http://homeassistant:8123;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Important for cookies and session handling
            proxy_set_header Cookie $http_cookie;
            proxy_cookie_domain homeassistant $host;
            proxy_cookie_path / /;
            
            # Mobile app specific
            proxy_buffering off;
            proxy_read_timeout 3600;

            # Allow cross-origin requests from companion app
            add_header 'Access-Control-Allow-Origin' 'https://companion.home-assistant.io' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://companion.home-assistant.io' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }

    # N8N Server
    server {
        listen 443 ssl;
        server_name n8n.palonso-pi.duckdns.org;

        ssl_certificate /etc/letsencrypt/live/palonso-pi.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/palonso-pi.duckdns.org/privkey.pem;

        location / {
            proxy_pass http://n8n:5678/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    # Vaultwarden Server
    server {
        listen 443 ssl;
        server_name vault.palonso-pi.duckdns.org;

        ssl_certificate /etc/letsencrypt/live/palonso-pi.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/palonso-pi.duckdns.org/privkey.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        location / {
            proxy_pass http://vaultwarden:80;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # WebSocket support
        location /notifications/hub {
            proxy_pass http://vaultwarden:80;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Netdata Server
    server {
        listen 443 ssl;
        server_name analytics.palonso-pi.duckdns.org;

        ssl_certificate /etc/letsencrypt/live/palonso-pi.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/palonso-pi.duckdns.org/privkey.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        location / {
            proxy_pass http://netdata:19999/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}
