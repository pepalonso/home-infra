services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/logs:/var/log/nginx
      - ./certs:/etc/nginx/certs
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - HA_DOMAIN=${HA_DOMAIN:-ha.localhost}
      - N8N_DOMAIN=${N8N_DOMAIN:-n8n.localhost}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      app_net:
        ipv4_address: 172.30.0.2

  n8n:
    build:
      context: ./n8n
    container_name: n8n
    restart: unless-stopped
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_RUNNERS_ENABLED=true
      - N8N_PATH=/
      - WEBHOOK_TUNNEL_URL=https://${N8N_DOMAIN}/
      - GENERIC_TIMEZONE=Europe/Madrid
      - WEBHOOK_URL=https://${N8N_DOMAIN}/
      - NODE_FUNCTION_ALLOW_EXTERNAL=axios,cheerio
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      app_net:
        ipv4_address: 172.30.0.3

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    restart: unless-stopped
    volumes:
      - homeassistant_data:/config
      - ./config/homeassistant/configuration.yaml:/config/configuration.yaml:ro
    environment:
      - TZ=Europe/Madrid
    depends_on:
      - nginx
    networks:
      app_net:
        ipv4_address: 172.30.0.4

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    volumes:
      - vaultwarden_data:/data
    environment:
      - SIGNUPS_ALLOWED=false
      - DOMAIN=https://${VAULTWARDEN_DOMAIN}
      - WEBSOCKET_ENABLED=true
      - LOG_LEVEL=info
    networks:
      app_net:
        ipv4_address: 172.30.0.5

  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - netdata_data:/var/lib/netdata
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - NETDATA_BASIC_AUTH_USER=${NETDATA_BASIC_AUTH_USER}
      - NETDATA_BASIC_AUTH_PASSWORD=${NETDATA_BASIC_AUTH_PASSWORD}
    networks:
      app_net:
        ipv4_address: 172.30.0.6

  trmnl:
    image: ghcr.io/usetrmnl/terminus:latest
    container_name: trmnl
    restart: unless-stopped
    volumes:
      - trmnl_data:/data
    environment:
      - TRMNL_API_KEY=${TRMNL_API_KEY}
      - TRMNL_API_URI=https://${TRMNL_DOMAIN}
      - APP_PORT=2300
    networks:
      app_net:
        ipv4_address: 172.30.0.7

networks:
  app_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
          gateway: 172.30.0.1

volumes:
  n8n_data:
  homeassistant_data:
  vaultwarden_data:
  netdata_data:
